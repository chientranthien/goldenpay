syntax = "proto3";

option go_package = "./internal/proto";

import "internal/proto/common.proto";

service WalletService {
  rpc Create(CreateWalletReq) returns (CreateWalletResp){}
  rpc Get(GetWalletReq) returns (GetWalletResp){}
  rpc Transfer(TransferReq) returns (TransferResp){}
  rpc Topup(TopupReq) returns (TopupResp){}
  rpc ProcessTransfer(ProcessTransferReq) returns (ProcessTransferResp){}
  rpc GetUserTransactions(GetUserTransactionsReq) returns (GetUserTransactionsResp){}
}

message CreateWalletReq {
  uint64 user_id = 1;
  int64 initial_balance = 2;
}

message CreateWalletResp {

}

message GetWalletReq {
  uint64 user_id = 1;
}

message GetWalletResp {
  int64 balance = 1;
  string currency = 2;
}

message TransferReq {
  uint64 from_user = 1;
  uint64 to_user = 2;
  int64 amount = 3;
}

message TransferResp {
  uint64 transaction_id = 1;
}

message TopupReq {
  uint64 user_id = 1;
  int64 amount = 3;
}

message TopupResp {
  uint64 topup_id = 1;
}

message ProcessTransferReq {
  uint64 transaction_id = 1;
}

message ProcessTransferResp {
}

message GetUserTransactionsCond {
  message UserCond {
    uint64 eq = 2;
  }

  UserCond user = 1;
  CtimeCond ctime = 2;
}

message GetUserTransactionsReq {
  GetUserTransactionsCond cond = 1;
  Pagination pagination = 2;
}

message GetUserTransactionsResp {
  repeated Transaction transactions = 1;
  Pagination next_pagination = 2;
}

message Wallet {
  uint64 id = 1;
  uint64 user_id = 2;
  int64 balance = 4;
  string currency = 5;
  uint64 status = 6;
  uint64 version = 7;
  uint64 ctime = 8;
  uint64 mtime = 9;
}

message Transaction {
  uint64 id = 1;
  uint64 from_user = 2;
  uint64 to_user = 3;
  uint64 from_wallet = 4;
  uint64 to_wallet = 5;
  int64 amount = 6;
  uint64 status = 7;
  uint64 version = 8;
  uint64 ctime = 9;
  uint64 mtime = 10;
}

message Topup {
  uint64 id = 1;
  uint64 user_id = 2;
  uint64 wallet_id = 4;
  int64 amount = 6;
  uint64 status = 7;
  uint64 version = 8;
  uint64 ctime = 9;
  uint64 mtime = 10;
}

message NewTransactionEvent {
  uint64 transaction_id = 1;
  uint64 event_time = 2;
  uint64 from_user = 3;
  uint64 to_user = 4;
}