syntax = "proto3";

option go_package = "./internal/proto";

import "internal/proto/common.proto";

service UserService {
  rpc Signup(SignupReq) returns (SignupResp){}
  rpc Login(LoginReq) returns (LoginResp){}
  rpc Authz(AuthzReq) returns (AuthzResp){}
  rpc Get(GetReq) returns (GetResp){}
  rpc GetBatch(GetBatchReq) returns (GetBatchResp){}
  rpc GetByEmail(GetByEmailReq) returns (GetByEmailResp){}
  rpc CreateContactIfNotExist(CreateContactIfNotExistReq) returns (CreateContactIfNotExistResp){}
  rpc GetContacts(GetContactsReq) returns (GetContactsResp){}
}

message GetByEmailReq {
  string email = 1;
}

message GetByEmailResp {
  User user = 1;
}

message SignupReq {
  string email = 1;
  string password = 2;
  string name = 3;
}

message SignupResp {
}

message LoginReq {
  string email = 1;
  string password = 2;
}

message LoginResp {
  string token = 1;
  uint64 user_id = 2;
}

message AuthzReq {
  string token = 1;
  string resource = 2;
}

message AuthzMetadata {
  uint64 user_id = 1;
  string email = 2;
}

message AuthzResp {
  AuthzMetadata metadata = 1;
}

message GetReq {
  uint64 id = 1;
}

message GetResp {
  User user = 1;
}

message GetBatchReq {
  repeated uint64 ids = 1;
}

message GetBatchResp {
  repeated User users = 1;
}

message GetContactsReq {
  GetContactsCond Cond = 1;
  Pagination pagination = 2;
}

message GetContactsResp {
  repeated Contact contacts = 1;
  Pagination next_pagination = 2;
}

message GetContactsCond {
  message UserCond {
    uint64 eq = 2;
  }

  UserCond user = 1;
  CtimeCond ctime = 2;
}

message CreateContactIfNotExistReq {
  uint64 user_id = 1;
  uint64 contact_user_id = 2;
}

message CreateContactIfNotExistResp {}

message User {
  uint64 id = 1;
  string email = 2;
  string hashed_password = 3;
  string name = 4;
  uint64 status = 5;
  uint64 version = 6;
  uint64 ctime = 7;
  uint64 mtime = 8;
}

message Contact {
  uint64 id = 1;
  uint64 user_id = 2;
  uint64 contact_user_id = 3;
  uint64 status = 4;
  uint64 version = 5;
  uint64 ctime = 6;
  uint64 mtime = 7;
}

message NewUserEvent {
  uint64 user_id = 1;
  uint64 event_time = 2;
}